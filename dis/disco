#!/bin/bash

# lc3 disassembly multitool
# this is the driver for the other programs
# lc3tools mostly take single file as input
# simp/simpl needs shared libraries to work

# TODO:
# provide working assembler as an option: lc3_asm.py
# finish out the converter to replace the lc3convert binary

#----------------------------------------

TC="tests/c"
TB="tests/binary/"
TA="tests/assembly/"
TS="tests/SimPrograms"

DIS="scripts/lc3_dis.py"
CNV="scripts/lc3_conv.py"
ASM="scripts/lc3_asm.py"
PAT="scripts/lc3_patch.py"
STP="scripts/strip_cmt.py"
RSM="scripts/lc3_resym.py"

SIMP1="workbench/simpl/simp"
SIMP2="workbench/simpl/simpl-2.0.3.bin"

PENN1="workbench/pennsim/LC3sim.jar"
PENN2="workbench/pennsim/PennSim.jar"

LC3ASS="workbench/lc3tools/lc3as"
LC3CVT="workbench/lc3tools/lc3convert"
LC3CMP="workbench/lcc-1.3/install/lcc"
LC3SIM="workbench/lc3tools/lc3sim"

function main()
{
    # separate flag and files
    IFS=' ' read -r FLAG FILES <<< "$@"

    # check for flag and file >= 1
    if [ $# -lt 1 ] ; then
          errmsg "Error: Missing Arguments"
    fi

    # run sub programs with args
    case $FLAG in
        -a) # assemble
            $LC3ASS $2
            ;;
        -a1) # assemble with me
            $STP $2
            $ASM $2".out"
            ;;
        -b0) # bin to obj
            $LC3CVT -b2  $2
            ;;
        -b1) # hex to obj
            $LC3CVT -b16 $2
            ;;
        -b2) # bin to hex
            $CNV 0 $FILES
            ;;
        -b3) # hex to bin
            $CNV 1 $FILES
            ;;
        -b4) # obj to bin
            $CNV 2 $FILES
            ;;
        -c) # compile
            $LC3CMP $FILES
            ;;
        -d) # disassemble
            $CNV 2 $2
            $DIS $2".out"
            $STP $2".out.asm"
            $RSM $2".out.asm.out"
            ;;
        -h) # help
            echo; helpmsg; echo
            ;;
        -p) # patch
            $STP $2
            $PAT $2".out"
            ;;
        -r) # reassemble
            $CNV 2 $2
            $DIS $2".out"
            $STP $2".out.asm"
            $RSM $2".out.asm.out"
            $STP $2".out.asm.out.asm"
            $PAT $2".out.asm.out.asm.out"
            $STP $2".out.asm.out.asm.out.asm"
            cp   $2".out.asm.out.asm.out.asm.out"  $2".out.asm.out.asm.out.asm.out.asm"
            $LC3ASS $2".out.asm.out.asm.out.asm.out.asm"
            ;;
        -s0) # simulate
            echo "Starting LC-3 Simulator CLI"
            $LC3SIM $FILES
            ;;
        -s1) # simulate
            echo "Starting simp CLI"
            $SIMP1 $FILES
            ;;
        -s2) # simulate
            echo "Starting simpl GUI"
            $SIMP2 $FILES
            ;;
        -s3) # simulate
            echo "Starting PennSim 1"
            java -jar $PENN1 $FILES
            ;;
        -s4) # simulate
            echo "Starting PennSim 2"
            java -jar $PENN2 $FILES
            ;;
        -t0) # test convert/assemble
            tester
            ;;
        -t1) # test simulate
            simulator
            ;;
        -tc) # delete
            cleaner
            ;;
        *)  # ERROR
            errmsg "Error: Unknown flag"
            ;;
    esac
}

#----------------------------------------

function errmsg()
{
    echo; echo "$1"
    helpmsg
    echo
    exit 1
}

function helpmsg()
{
    echo "Usage:"
    echo "  $ ./disco -flag arguments"
    echo "Flags:"
    echo "  -a  = Assemble asm file"    # lc3as
    echo "  -a1 = Assemble asm file - lc3_asm.py"    # lc3_asm.py
    echo "  -b0 = Convert bin to obj"   # lc3convert
    echo "  -b1 = Convert hex to obj"   # lc3convert
    echo "  -b2 = Convert bin to hex"   # lc3_conv.py
    echo "  -b3 = Convert hex to bin"   # lc3_conv.py
    echo "  -b4 = Convert obj to bin"   # lc3_conv.py
    echo "  -c  = Compile C file"       # lcc-1.3
    echo "  -d  = Disassemble obj file" # lc3_dis.py
    echo "  -h  = Display this help message"
    echo "  -p  = Patch assembly code"
    echo "  -r  = Reassemble patch obj file"
    echo "  -s0 = Simulate with lc3-sim CLI"
    echo "  -s1 = Simulate with simp CLI"
    echo "  -s2 = Simulate with simpl GUI"
    echo "  -s3 = Simulate with PennSim 1 CLI/GUI"
    echo "  -s4 = Simulate with PennSim 2 CLI/GUI"
    echo "  -t0 = Test scripts"
    echo "  -t1 = Test simulators"
    echo "  -tc = Clean up test files"
}

# take diff of an original file compared to the converted
# takes 3 arguments for file extentions to match
# 1. directory of files
# 2. extention for converted file,
# 3. extention for original file
function chkdiff()
{
    echo "checking converted files:"
    files=$(ls $1 | grep -E $2)
    for file in $files ; do
        len1=$(printf "%s" "$file" | wc -m)
        len2=$(printf "%s" "$2" | wc -m)
        end=$(expr $len1 - $len2)
        file2=$(printf "%s" "$file" | cut -c 1-$end)"$3"
        echo "diff of $file2 and $file"
        diff -s "$1$file2"  "$1$file"
        echo
    done
}

function cleaner()
{
    echo; echo "cleaner"; echo

    rm $TB*.asm > /dev/null 2>&1
    rm $TB*.hex > /dev/null 2>&1
    rm $TB*.obj > /dev/null 2>&1
    rm $TB*.out > /dev/null 2>&1

    rm $TA*.obj > /dev/null 2>&1
    rm $TA*.sym > /dev/null 2>&1
    rm $TA*.out > /dev/null 2>&1
    rm $TA*.out.asm > /dev/null 2>&1

    # careful with the SimPrograms for Histogram && Invaders
    # dont want to delete the special .obj && .sym files
    DIR="$TS/AddOdd"
    rm $DIR/*.obj > /dev/null 2>&1
    rm $DIR/*.sym > /dev/null 2>&1
    rm $DIR/*.out > /dev/null 2>&1
    rm $DIR/*.out.asm > /dev/null 2>&1

    DIR="$TS/Histogram"
    rm $DIR/*.out > /dev/null 2>&1
    rm $DIR/*.out.asm > /dev/null 2>&1
    rm $DIR/hist.obj > /dev/null 2>&1
    rm $DIR/hist.sym > /dev/null 2>&1
    rm $DIR/testdata1.obj > /dev/null 2>&1
    rm $DIR/testdata1.sym > /dev/null 2>&1

    DIR="$TS/Invaders"
    rm $DIR/*.out > /dev/null 2>&1
    rm $DIR/*.out.asm > /dev/null 2>&1
    rm $DIR/invaders.obj > /dev/null 2>&1
    rm $DIR/invaders.sym > /dev/null 2>&1
}

# tests that the file format converter and disassembler work
function tester()
{
    # bin->hex to hex->bin
    # bin->hex to hex->obj to obj->bin
    # hex->bin to bin->obj to obj->bin to bin->hex

    echo
    echo "converter"; echo                  # test converter
    $CNV  0  $TB*.bin                       # bin to hex
    $CNV  1  $TB*.bin.out                   # hex to bin
    echo
    chkdiff  $TB  .bin.out.out  .bin        # compare converted files
    echo
    $DIS  $TB*.bin                          # test disassembler
    $STP  $TB*.bin.asm
    $RSM  $TB*.bin.asm.out                  # test re-symbolizer
    echo

    # eventually collect all assemblable files into the assembly folder
    # then can only loop through the good ones and assemble then disassemble and compare
    echo "assessemble disassemble"; echo    # test assemble and disassemble
    for file in $(ls $TA) ; do
        echo; echo "assessemble $file"; echo
        $LC3ASS "$TA$file"
        echo; echo "disassemble $file"; echo
        BOOM=${file%.*} # remove .asm from file name
        $CNV 2 "$TA$BOOM".obj
        $DIS "$TA$BOOM".obj.out
        $STP "$TA$BOOM".obj.out.asm
        $RSM "$TA$BOOM".obj.out.asm.out
    done

    echo
}

function simulator()
{

    PF="../../../"
    cd $TS

    cd AddOdd
    java -jar $PF$PENN2 -s *_script.txt
    cd ..

    cd Histogram
    java -jar $PF$PENN2 -s *_script.txt
    cd ..

    cd Invaders
    java -jar $PF$PENN2 -s *_script.txt
    cd ..
}

#----------------------------------------

# call main function and pass command line arguments
main $@

