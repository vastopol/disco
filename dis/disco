#!/bin/bash

# this is the driver for the other programs
# eventually provide my own assembler as an option: lc3_asm.py

function disco_help()
{
    echo "Usage:"
    echo "  $ ./disco -flag arguments"
    echo "Flags:"
    echo "  -a  = Assemble with lc3as"
    echo "  -b0 = Convert bin to obj with lc3convert"
    echo "  -b1 = Convert hex to obj with lc3convert"
    echo "  -b2 = Convert bin to hex with lc3_conv.py"
    echo "  -b3 = Convert hex to bin with lc3_conv.py"
    echo "  -b4 = Convert obj to bin with lc3_conv.py"  # not dine
    echo "  -c  = Compile with lcc"                     # not done
    echo "  -d  = Disassemble with lc3_dis.py"
    echo "  -h  = Display this help message"
    echo "  -s  = Simulate with lc3-sim"                # not done
    echo "  -t  = Test"
    echo "  -tc = Test Clean Up"
}

# take diff of an original file compared to the converted
# takes 2 "arguments" for file extentions to match
# 1. pat = extention for converted file,
# 2. suf = extention for original file
# yes I realize I could use $1 and $2 as args, but this is more readable

pat=""
suf=""
function chkdiff()
{
    echo "checking converted files:"
    files=$(ls tests/binary/ | grep -E $pat)
    for f in $files ; do
        len1=$(printf "%s" "$f" | wc -m)
        len2=$(printf "%s" "$pat" | wc -m)
        end=$(expr $len1 - $len2)
        f2=$(printf "%s" $f | cut -c 1-$end)$suf
        echo "diff of $f2 and $f"
        diff -s "tests/binary/"$f2 "tests/binary/"$f
    done
}

function tester()
{
    echo
    ls tests/binary/*
    echo

    # test converter
    ./lc3_conv.py 0 tests/binary/*.bin      # bin to hex
    ./lc3_conv.py 1 tests/binary/*.bin.out  # hex to bin

    echo

    # compare converted files
    pat=".bin.out.out"
    suf=".bin"
    chkdiff

    echo

    # test disassembler
    ./lc3_dis.py tests/binary/*.bin

    echo
    ls tests/binary/*
    echo
}

# ----------------------------------------

# error check for flag and file >= 1
if [ $# -lt 1 ] ; then
      echo "Error: Missing Arguments"
      disco_help
      exit 1
fi

# separate flag and files
FLAG="$1"
ARG_ARRAY=("$@")
FILES=("${ARG_ARRAY[@]:1}")

# the locations of the external executables in workbench
LC3ASS="./workbench/lc3tools/lc3as"
LC3CVT="./workbench/lc3tools/lc3convert"
LC3CMP="./workbench/lcc-1.3/install/lcc"
LC3SIM="./workbench/lc3tools/lc3sim"

# run sub programs with args
if   [ "$FLAG" = "-a" ] ; then      # assemble
      $LC3ASS $2
elif [ "$FLAG" = "-b0" ] ; then     # bin to obj
      $LC3CVT -b2  $2
elif [ "$FLAG" = "-b1" ] ; then     # hex to obj
      $LC3CVT -b16 $2
elif [ "$FLAG" = "-b2" ] ; then     # bin to hex
      ./lc3_conv.py 0 "${FILES[@]}"
elif [ "$FLAG" = "-b3" ] ; then     # hex to bin
      ./lc3_conv.py 1 "${FILES[@]}"
elif [ "$FLAG" = "-b4" ] ; then     # obj to bin
      ./lc3_conv.py 2 "${FILES[@]}"
elif [ "$FLAG" = "-c" ] ; then      # compile
      echo "FIXME"
      $LC3CMP $2
elif [ "$FLAG" = "-d" ] ; then      # disassemble
      ./lc3_conv.py 2 $2
      ./lc3_dis.py $2".out"
      # ./lc3_dis.py "${FILES[@]}"
elif  [ "$FLAG" = "-h" ] ; then     # help message
      disco_help
elif [ "$FLAG" = "-s" ] ; then  z    # simulate
      echo "Starting LC-3 Simulator"
      $LC3SIM
elif  [ "$FLAG" = "-t" ] ; then      # test harness
      tester
elif  [ "$FLAG" = "-tc" ] ; then     # clean
      rm tests/binary/*.asm > /dev/null 2>&1
      rm tests/binary/*.out > /dev/null 2>&1
else                                 # ERROR
      echo "Error: Unknown flag"
      disco_help
      exit 1
fi

# ----------------------------------------
