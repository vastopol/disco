lcc-1.3
C to LC-3 compiler

----------------------------------------

my scripts:

disco = suite
lc3_conv.py = format converter
lc3_dis.py = disassembler
lc3_asm.py = assembler (unstarted)

if possible to compile lc3tools && lcc then those executables should be called to do the bin -> obj

  - there is an assembler   (lc3tools)
  - there is a disassembler (disco)
  - there is a compiler     (lcc-1.3)

----------------------------------------

lc3tools && lcc

not so simple to use:
lcc
rcc
lc3p
cpp

need proper install and configure
must do

configure; make; make install; make clean;

also needs to have the lc3as be in the install/ folder

**********

ERROR:

preprocessor

cpp currently seems to have problems with the #include preprocessor directives

./disco -c tests/c/chapter16_code/fig16.4.c
cpp: tests/c/chapter16_code/fig16.4.c:1 Syntax error in #include

file:

    workbench/lcc-1.3/cpp/include.c

function:

    void doinclude(Tokenrow *trp)

error:

    if (trp->tp < trp->lp)

* FIXME ?
    comment out the check and it works sort of

----------------------------------------

note pages:

https://en.wikipedia.org/wiki/LC-3
https://www2.seas.gwu.edu/~bhagiweb/cs135/lectures/LCC-Compiler.html
http://people.cs.georgetown.edu/~squier/Teaching/HardwareFundamentals/LC3-trunk/docs/LC3-Linking-PP.pdf
http://people.cs.georgetown.edu/~squier/Teaching/SystemsFundamentals/121-2012-CourseDocuments/Lec-1d-Linking.pdf
http://people.cs.georgetown.edu/~squier/Teaching/HardwareFundamentals/LC3-trunk/docs/README-LC3tools.html
http://users.ece.utexas.edu/~ryerraballi/ConLC3.html
http://www.cs.utexas.edu/users/fussell/cs310h/compilerLC3.shtml
https://github.com/haplesshero13/lcc-lc3
https://github.com/dinomight/LC3Tools

----------------------------------------

USAGE:

lcc [ option | file ]...
	except for -l, options are processed left-to-right before files
	unrecognized options are taken to be linker options
-A	warn about nonANSI usage; 2nd -A warns more
-b	emit expression-level profiling code; see bprint(1)
-Bdir/	use the compiler named `dir/rcc'
-c	compile only
-dn	set switch statement density to `n'
-Dname -Dname=def	define the preprocessor symbol `name'
-E	run only the preprocessor on the named C programs and unsuffixed files
-help or -?	print this message on standard error
-Idir	add `dir' to the beginning of the list of #include directories
-lx	search library `x'
-L	compile to LC-3 Assembly Language
-M	emit makefile dependencies; implies -E
-N	do not search the standard directories for #include files
-n	emit code to check for dereferencing zero pointers
-O	is ignored
-o file	leave the output in `file'
-P	print ANSI-style declarations for globals on standard error
-S	compile to intermediate form
-t -tname	emit function tracing calls to printf or to `name'
-tempdir=dir	place temporary files in `dir/'; default=/tmp
-Uname	undefine the preprocessor symbol `name'
-v	show commands as they are executed; 2nd -v suppresses execution
-w	suppress warnings
-Woarg	specify system-specific `arg'
-W[pfal]arg	pass `arg' to the preprocessor, compiler, assembler, or linker

----------------------------------------

rcc
./workbench/lcc-1.3/install/rcc: unknown target; must specify one of
	-target=lc3
	-target=alpha/osf
	-target=mips/irix
	-target=sparc/sun
	-target=sparc/solaris
	-target=x86/win32
	-target=x86/linux
	-target=symbolic/osf
	-target=symbolic/irix
	-target=symbolic
	-target=bytecode
	-target=null

----------------------------------------

howto:


lcc -o filename filename.c


This command compiles your C program contained in filename.c and produces an object file named filename.obj, which can be loaded and run in the simulator.

As part of the compile process, the assembly language translation of the C program is produced first, and is available as filename.asm.
The compiler then calls the LC-3 assembler on it to assemble and produce the final object file.

Notice that the assembler also produces the usual auxiliary files filename.hex and filename.dbg, that you might like to look at.

If the output file name is not specified by the -o option, then the output is written to a.asm, a.obj, a.hex and a.dbg.

----------------------------------------


LC3 assembler tools, unix version (Lumetta)
Build these tools using gcc (see README in lc3tools-v12.zip distribution).
Contents:
--- lc3as:        LC3 assembler, produces .obj files.
--- lc3convert:   ascii to .obj converter.


lc3as
Assembles LC3 assembly source code to an .obj file.
Command            ---- Description
-------------      ---------------------------
lc3as file.asm     ---- Creates file.obj and file.sym, the symbol table.

Error Message                      ---- Explanation
------------------------           ---------------------------
file contains only comments        ---- no assembly instructions in file.
no .ORIG or .END directive found   ---- .ORIG/.END must be first/last line.
multiple .ORIG directives found    ---- one .ORIG is allowed per file.
instruction appears before .ORIG   ---- instructions must start after .ORIG.
no .END directive found            ---- all programs must end with .END.
label appears before .ORIG         ---- nothing should appear before .ORIG.
label has already appeared         ---- label can only be defined once.
unknown label x                    ---- label x is referenced, but not defined.
illegal operands for x             ---- instruction has bad operand specification.
unterminated string                ---- .STRINGZ has no close-quotes.
contains unrecognizable characters ---- found chars that assembler cannot parse.
WARNING: All text after .END is ignored.


lc3convert
Convert ascii text version of a machine code .obj file to an actual executable machine code .obj file that can be run in the simulator. As with the actual lc3 .obj format, the first line must contain the load address of the first instruction: if the first line is
0011 0000 0000 0000,
then the first instruction will be located at x3000 when running the simulator. Since lc3convert is reading plain text files, it can handle some extras: (1) the ";" comment character causes the rest of the line to be ignored, (2) digits may have white space within them to help visually group them.
Command                     ---- Description
-----------------           ---------------------------
lc3convert file.bin         ---- create file.obj, which can be run by simulator.
lc3convert -b2 file.bin     ---- text machine code is in binary (base 2).
lc3convert -b16 file.bin    ---- text machine code is in hex (base 16).

Error Message                      ---- Explanation
----------------------             ---------------------------
line contains only x digits        ---- only x digits of 16-bit instruction found.
line contains more than 16 digits  ---- instruction bigger than 16-bits.
contains unrecognizable characters ---- invalid characters were used.
constant outside of allowed range  ---- Immediate value exceeds instruction's range.


----------------------------------------

possible errors with lc3as

can check like:
for f in $(ls tests/assembly/chapter10_code/) ; do echo $f; workbench/lc3tools/lc3as tests/assembly/chapter10_code/$f; done

good run:

STARTING PASS 1
0 errors found in first pass.
STARTING PASS 2
0 errors found in second pass.

errors: chapter8

chapter8_code/8.5.asm
STARTING PASS 1
  1: label appears before .ORIG
  1: instruction appears before .ORIG
 34: contains unrecognizable characters
 35: contains unrecognizable characters
 36: contains unrecognizable characters
 43: no .END directive found
6 errors found in first pass.

chapter8_code/8.echo.asm
STARTING PASS 1
  1: label appears before .ORIG
  1: instruction appears before .ORIG
 12: no .END directive found
3 errors found in first pass.

chapter8_code/8.simple_input.asm
STARTING PASS 1
  1: label appears before .ORIG
  1: instruction appears before .ORIG
  7: no .END directive found
3 errors found in first pass.

chapter8_code/8.simple_output.asm
STARTING PASS 1
  1: label appears before .ORIG
  1: instruction appears before .ORIG
  7: no .END directive found
3 errors found in first pass.

errors: chapter9

chapter9_code/9.ascii_to_int.asm
STARTING PASS 1
  1: instruction appears before .ORIG
 14: no .END directive found
2 errors found in first pass.

chapter9_code/9.lowercase.asm
STARTING PASS 1
 13: no .END directive found
1 errors found in first pass.

